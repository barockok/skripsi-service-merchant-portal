#
# Autogenerated by Thrift Compiler (0.9.3)
#
# DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
#

require 'thrift'
require 'xyz_types'

module XYZThrift
  module MerchantService
    class Client
      include ::Thrift::Client

      def get(merchantId)
        send_get(merchantId)
        return recv_get()
      end

      def send_get(merchantId)
        send_message('get', Get_args, :merchantId => merchantId)
      end

      def recv_get()
        result = receive_message(Get_result)
        return result.success unless result.success.nil?
        raise result.err unless result.err.nil?
        raise ::Thrift::ApplicationException.new(::Thrift::ApplicationException::MISSING_RESULT, 'get failed: unknown result')
      end

    end

    class Processor
      include ::Thrift::Processor

      def process_get(seqid, iprot, oprot)
        args = read_args(iprot, Get_args)
        result = Get_result.new()
        begin
          result.success = @handler.get(args.merchantId)
        rescue ::XYZThrift::MerchantNotFound => err
          result.err = err
        end
        write_result(result, oprot, 'get', seqid)
      end

    end

    # HELPER FUNCTIONS AND STRUCTURES

    class Get_args
      include ::Thrift::Struct, ::Thrift::Struct_Union
      MERCHANTID = 1

      FIELDS = {
        MERCHANTID => {:type => ::Thrift::Types::STRING, :name => 'merchantId'}
      }

      def struct_fields; FIELDS; end

      def validate
      end

      ::Thrift::Struct.generate_accessors self
    end

    class Get_result
      include ::Thrift::Struct, ::Thrift::Struct_Union
      SUCCESS = 0
      ERR = 1

      FIELDS = {
        SUCCESS => {:type => ::Thrift::Types::STRUCT, :name => 'success', :class => ::XYZThrift::Merchant},
        ERR => {:type => ::Thrift::Types::STRUCT, :name => 'err', :class => ::XYZThrift::MerchantNotFound}
      }

      def struct_fields; FIELDS; end

      def validate
      end

      ::Thrift::Struct.generate_accessors self
    end

  end

end
